//navigate
void navigate(int funcKey){
  while(funcKey){
    if(funcKey == diverKey)
      funcKey = divergenceMeter();
    else if(funcKey == setupKey)
      funcKey = setTime_Date();
  }
  if(mainMode)
    updateTime();
  else
    updateDate();
}
//setDivergenceRand
void setDivergenceRand(int maxTimeLoop = random(800, 2500), int stepUpdate = 80){
  int timeOff[4];	// Время перебора значений для индикаторов 3-6
  int realMaxTime = 0;	
  for(int i = 0; i < 4; i++){
    timeOff[i] = random(maxTimeLoop/4, maxTimeLoop);
    if(realMaxTime < timeOff[i])
      realMaxTime = timeOff[i];
  }
  unsigned long startLoop = millis();
  unsigned long updateLoop = startLoop - stepUpdate;
  while(millis() - startLoop < realMaxTime){
    if(millis() - updateLoop > stepUpdate){
      updateLoop = millis();
      digits[0] = random(0, 10);
      for(int i = 2; i < 6; i++){
        if(millis() - startLoop < timeOff[i-2])
          digits[i] = random(0, 10);
      }
    }
    showWhithout1();
  }
  digits[0] = (random(0, 101) > 90 + digits[2])? 1:0;
//divergenceMeter
int divergenceMeter(){
  setDivergenceRand();
  while(true){
    showWhithout1();
	
    if(pushedKey = pushButton()){
      if(pushedKey == 1)
        setDivergenceRand();
      else if(pushedKey == 2)
        return loopKey;
      else if(pushedKey == 3)
        return setupKey;
    }
  }
}
 
//pushBitton
int pushButton(){
  int MyButtonValue = analogRead(keyb);
  // наиболее вероятно, что кнопка не нажата
  if(MyButtonValue < 200)
    return 0;
  // устраняем дребезжание кнопки
  if(millis() - AntiRattlingTimer  < 250)
    return 0;
  AntiRattlingTimer = millis();
  if(MyButtonValue > 900 && MyButtonValue < 1100)
    return 1;
  else if(MyButtonValue > 600 && MyButtonValue < 800)
    return 2;
  else if(MyButtonValue > 300 && MyButtonValue < 500)
    return 3;
  else
    return 0;
}
//showWhithout1
void showWhithout1(int a = 1){
  for(int i = 0 ; i < 6; i++){
    if(i != a){
      setNumber(digits[i]);
      digitalWrite(lampKeys[i],HIGH);
      delay(2);
      digitalWrite(lampKeys[i],LOW);
      delay(1);
    }
    else
      delay(3);
  }
}

